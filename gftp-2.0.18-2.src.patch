diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/Makefile.am src/gftp-2.0.18/Makefile.am
--- origsrc/gftp-2.0.18/Makefile.am	2005-02-04 09:42:32.000000000 -0600
+++ src/gftp-2.0.18/Makefile.am	2007-11-11 22:00:56.890625000 -0600
@@ -11,5 +11,4 @@
 dist-hook:
 	cp gftp.spec $(distdir)     
 
-ACLOCAL_AMFLAGS = -I m4
 
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/configure.in src/gftp-2.0.18/configure.in
--- origsrc/gftp-2.0.18/configure.in	2005-02-04 09:42:32.000000000 -0600
+++ src/gftp-2.0.18/configure.in	2007-11-11 23:38:01.453125000 -0600
@@ -53,7 +53,7 @@
 AC_HEADER_DIRENT
 AC_HEADER_STDC
 AC_HEADER_SYS_WAIT
-AC_CHECK_HEADERS(fcntl.h libutil.h limits.h malloc.h pty.h strings.h sys/ioctl.h sys/time.h unistd.h stdint.h sys/mkdev.h inttypes.h)
+AC_CHECK_HEADERS(fcntl.h libutil.h limits.h malloc.h pty.h strings.h stropts.h sys/ioctl.h sys/time.h unistd.h stdint.h sys/mkdev.h inttypes.h)
 
 dnl AM_TYPE_PTRDIFF_T
 AC_TYPE_SOCKLEN_T
@@ -73,6 +73,51 @@
 AC_FUNC_UTIME_NULL
 AC_CHECK_FUNCS(gai_strerror getaddrinfo getcwd gettimeofday getwd mkdir mktime putenv rmdir select socket strdup strstr strtod strtol uname grantpt openpty getdtablesize)
 
+# Checks for typedefs, structures, and compiler characteristics.
+AC_CHECK_MEMBER(struct dirent.d_namlen,AC_DEFINE(HAVE_DIRENT_NAMLEN,1,[Define if struct dirent has member d_namlen]),,[#include <sys/types.h>
+#include <dirent.h>
+])
+AC_CHECK_MEMBER(struct dirent.d_fileno,AC_DEFINE(HAVE_DIRENT_FILENO,1,[Define if struct dirent has member d_fileno]),,[#include <sys/types.h>
+#include <dirent.h>
+])
+AC_CHECK_MEMBER(struct dirent.d_type,AC_DEFINE(HAVE_DIRENT_TYPE,1,[Define if struct dirent has member d_type]),,[#include <sys/types.h>
+#include <dirent.h>
+])
+AC_CHECK_TYPE(union semun, ,AC_DEFINE(_SEM_SEMUN_UNDEFINED,1,[Define if you do not have semun in sys/sem.h]),
+[#include <sys/types.h>
+#include <sys/ipc.h>
+#include <sys/sem.h>
+])
+
+# Checks for library functions.
+AC_CHECK_FUNCS(lockf semop shmget)
+
+AC_ARG_WITH(lockprefix,AS_HELP_STRING([--with-lockprefix=path],[Set lock prefix path to (default /tmp/.FSPL)]))
+AC_ARG_WITH([locking],AS_HELP_STRING([--with-locking=none/semop/lockf],[Set client locking type (default autodetected)]))
+
+#Parse user locking choice
+if test "x$with_locking" = "xno" -o "x$with_locking" = "xnone" ; then
+    AC_DEFINE(FSP_NOLOCKING, 1, [No FSP locking])
+    AC_MSG_NOTICE(locking disabled by user)
+elif test "x$with_locking" = "xlockf" -a "x$ac_cv_func_lockf" = "xyes"; then
+    AC_DEFINE(FSP_USE_LOCKF, 1, [FSP uses lockf])
+elif test "x$with_locking" = "xsemop" -a "x$ac_cv_func_semop" = "xyes" -a "x$ac_cv_func_shmget" = "xyes";then
+    AC_DEFINE(FSP_USE_SHAREMEM_AND_SEMOP, 1, [FSP uses shmget and semop])
+elif test "x$ac_cv_func_semop" = "xyes" -a "x$ac_cv_func_shmget" = "xyes"; then
+    AC_DEFINE(FSP_USE_SHAREMEM_AND_SEMOP, 1, [FSP uses shmget and semop])
+elif test "x$ac_cv_func_lockf" = "xyes"; then
+    AC_DEFINE(FSP_USE_LOCKF, 1, [FSP uses lockf])
+else
+    AC_DEFINE(FSP_NOLOCKING, 1, [No FSP locking])
+    AC_MSG_NOTICE([no suitable locking method detected])
+fi
+
+#locking prefix
+if test "x$with_lockprefix" != "xno" -a "x$with_lockprefix" != "xyes" -a "x$with_lockprefix" != "x" ; then
+    AC_DEFINE_UNQUOTED(FSP_KEY_PREFIX, "$with_lockprefix" , [FSP locking prefix])
+fi
+
+
 if test "x$enable_gtk20" = "xyes" ; then
   PKG_CHECK_MODULES(GLIB, glib-2.0 >= 2.0.0, found_glib20=1, found_glib20=0)
 else
@@ -93,11 +138,13 @@
   
 AC_CHECK_LIB(nsl, gethostbyname, EXTRA_LIBS="$EXTRA_LIBS -lnsl")
 
+AC_CHECK_LIB(getaddrinfo, getaddrinfo, EXTRA_LIBS="$EXTRA_LIBS -lgetaddrinfo")
+
 GFTP_TEXT=""
 USE_READLINE="yes"
 READLINE_LIBS=""
 if test "x$enable_textport" = "xyes" ; then
-  GFTP_TEXT="gftp-text"
+  GFTP_TEXT="gftp-text${EXEEXT}"
 
   AC_MSG_CHECKING([whether to use readline])
   AC_ARG_WITH(readline,
@@ -192,17 +239,17 @@
 
 if test "x$enable_gtkport" = "xyes" ; then
   if test $found_glib20 = 1 -a "x$enable_gtk20" = "xyes" ; then
-    PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.0.0, GFTP_GTK=gftp-gtk, AC_MSG_ERROR(You have GLIB 2.0 installed but I cannot find GTK+ 2.0. Run configure with --disable-gtk20 or install GTK+ 2.0))
+    PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.0.0, GFTP_GTK=gftp-gtk${EXEEXT}, AC_MSG_ERROR(You have GLIB 2.0 installed but I cannot find GTK+ 2.0. Run configure with --disable-gtk20 or install GTK+ 2.0))
   fi
 
   if test "x$GFTP_GTK" = "x" ; then
-    AM_PATH_GTK(1.2.3, GFTP_GTK=gftp-gtk, AC_MSG_WARN(gFTP needs GTK+ 1.2.3 or higher for the graphical version. Only building the text version))
+    AM_PATH_GTK(1.2.3, GFTP_GTK=gftp-gtk${EXEEXT}, AC_MSG_WARN(gFTP needs GTK+ 1.2.3 or higher for the graphical version. Only building the text version))
     GTHREAD_LIBS="-lgthread"
   else
     GTHREAD_LIBS="-lgthread-2.0"
   fi
 
-  if test "x$GFTP_GTK" = xgftp-gtk; then
+  if test "x$GFTP_GTK" = xgftp-gtk${EXEEXT}; then
     case $host in
       *-hpux*)
         AC_CHECK_LIB(rt, sem_init)
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/lib/Makefile.am src/gftp-2.0.18/lib/Makefile.am
--- origsrc/gftp-2.0.18/lib/Makefile.am	2005-01-16 10:10:12.000000000 -0600
+++ src/gftp-2.0.18/lib/Makefile.am	2007-11-11 22:11:53.921875000 -0600
@@ -5,5 +5,5 @@
 libgftp_a_SOURCES=bookmark.c cache.c config_file.c fsp.c ftps.c https.c \
                   local.c misc.c mkstemps.c protocols.c pty.c rfc959.c \
                   rfc2068.c sshv2.c sslcommon.c
-INCLUDES=@GLIB_CFLAGS@ @PTHREAD_CFLAGS@ -I../intl -DSHARE_DIR=\"$(datadir)/gftp\" -DLOCALE_DIR=\"$(datadir)/locale\"
+INCLUDES=@GLIB_CFLAGS@ @PTHREAD_CFLAGS@ -I../intl -I$(srcdir)/fsplib -DSHARE_DIR=\"$(datadir)/gftp\" -DLOCALE_DIR=\"$(datadir)/locale\"
 noinst_HEADERS=gftp.h ftpcommon.h httpcommon.h options.h
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/lib/fsp.c src/gftp-2.0.18/lib/fsp.c
--- origsrc/gftp-2.0.18/lib/fsp.c	2005-01-16 10:15:05.000000000 -0600
+++ src/gftp-2.0.18/lib/fsp.c	2007-11-11 23:04:46.656250000 -0600
@@ -20,7 +20,6 @@
 
 #include "gftp.h"
 
-#define FSP_USE_SHAREMEM_AND_SEMOP 1
 #include "fsplib/fsplib.h"
 #include "fsplib/lock.h"
 
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/lib/fsplib/Makefile.am src/gftp-2.0.18/lib/fsplib/Makefile.am
--- origsrc/gftp-2.0.18/lib/fsplib/Makefile.am	2005-01-16 10:07:05.000000000 -0600
+++ src/gftp-2.0.18/lib/fsplib/Makefile.am	2007-11-11 23:41:29.359375000 -0600
@@ -2,5 +2,4 @@
 
 noinst_LIBRARIES = libfsp.a
 libfsp_a_SOURCES=fsplib.c lock.c
-INCLUDES=-DFSP_USE_SHAREMEM_AND_SEMOP=1
 noinst_HEADERS=fsplib.h lock.h
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/lib/fsplib/fsplib.c src/gftp-2.0.18/lib/fsplib/fsplib.c
--- origsrc/gftp-2.0.18/lib/fsplib/fsplib.c	2005-01-18 20:03:45.000000000 -0600
+++ src/gftp-2.0.18/lib/fsplib/fsplib.c	2007-11-11 23:43:49.265625000 -0600
@@ -2,7 +2,7 @@
 This file is part of fsplib - FSP protocol stack implemented in C
 language. See http://fsp.sourceforge.net for more information.
 
-Copyright (c) 2003-2005 by Radim HSN Kolar (hsn@netmag.cz)
+Copyright (c) 2003-2005 by Radim HSN Kolar (hsn@sendmail.cz)
 
 You may copy or modify this file in any manner you wish, provided
 that this notice is always included, and that you hold the author
@@ -12,6 +12,11 @@
                      This is a free software.  Be creative.
                     Let me know of any bugs and suggestions.
 */                  
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <sys/time.h>
@@ -24,6 +29,15 @@
 #include <string.h>
 #include <sys/stat.h>
 #include <dirent.h>
+
+#ifdef HAVE_STDINT_H
+#include <stdint.h>
+#endif
+
+#ifndef HAVE_GETADDRINFO
+#include <getaddrinfo.h>
+#endif
+
 #include "fsplib.h"
 #include "lock.h"
 
@@ -37,7 +51,7 @@
     len=strlen(dirname);
     if(len >= FSP_SPACE - 1)
     {
-	errno = ENAMETOOLONG;
+        errno = ENAMETOOLONG;
         return -1;
     }
     /* copy name + \0 */
@@ -47,13 +61,13 @@
     {
         out->buf[len]='\n';
         out->len++;
-	
+        
         len=strlen(s->password);
-	if(out->len+ len >= FSP_SPACE -1 )
-	{
-	    errno = ENAMETOOLONG;
-	    return -1;
-	}
+        if(out->len+ len >= FSP_SPACE -1 )
+        {
+            errno = ENAMETOOLONG;
+            return -1;
+        }
         memcpy(out->buf+out->len,s->password,len+1);
         out->len+=len;
     }
@@ -82,12 +96,6 @@
        return -1;
    }
 
-   if(in.cmd != command)
-   {
-       errno = ENOMSG;
-       return -1;
-   }
-
    errno = 0;
    return  0;
 }
@@ -100,14 +108,14 @@
 
     result=strrchr(filename,'/');
     if (result == NULL)
-	return strdup("");
+        return strdup("");
     pos=result-filename;
     tmp=malloc(pos+1);
     if(!tmp)
-	return NULL;
+        return NULL;
     memcpy(tmp,filename,pos);
     tmp[pos]='\0';
-    return tmp;		
+    return tmp;         
 }
 
 /* ************  Packet encoding / decoding *************** */
@@ -127,7 +135,7 @@
     if(p->xlen + p->len > FSP_SPACE )
     {
         /* not enough space */
-	errno = EMSGSIZE;
+        errno = EMSGSIZE;
         return 0;
     }
     ptr=space;
@@ -166,14 +174,14 @@
     
     if(recv_len<FSP_HSIZE)
     {
-	/* too short */
-	errno = ERANGE;
+        /* too short */
+        errno = ERANGE;
         return -1;
     }
     if(recv_len>FSP_MAXPACKET)
     {
-	/* too long */
-	errno = EMSGSIZE;
+        /* too long */
+        errno = EMSGSIZE;
         return -1;
     }
 
@@ -238,15 +246,19 @@
 
     if(p == rpkt)
     {
-	errno = EINVAL;
-	return -2;
+        errno = EINVAL;
+        return -2;
     }
     FD_ZERO(&mask);
     /* get the next key */
     p->key = client_get_key((FSP_LOCK *)s->lock);
 
+    retry = random() & 0xfff8;
+    if (s->seq == retry)
+        s->seq ^= 0x1080;
+    else
+        s->seq = retry; 
     dupes = retry = 0;
-    s->seq = (s-> seq + 0x08) & 0xfff8;
     t_delay = 0;
     /* compute initial delay here */
     /* we are using hardcoded value for now */
@@ -254,26 +266,26 @@
     l_delay = 0;
     for(;;retry++)
     {
-	if(t_delay >= s->timeout)
-	{
+        if(t_delay >= s->timeout)
+        {
             client_set_key((FSP_LOCK *)s->lock,p->key);
-	    errno = ETIMEDOUT;
-	    return -1;
-	}
+            errno = ETIMEDOUT;
+            return -1;
+        }
         /* make a packet */
         p->seq = (s->seq) | (retry & 0x7);
         l=fsp_pkt_write(p,buf);
         
         /* We should compute next delay wait time here */
         gettimeofday(&start[retry & 0x7],NULL);
-	if(retry == 0 )
-	    w_delay=f_delay;
-	else
-	{
-	    w_delay=l_delay*3/2; 
-	}
+        if(retry == 0 )
+            w_delay=f_delay;
+        else
+        {
+            w_delay=l_delay*3/2; 
+        }
 
-	l_delay=w_delay;
+        l_delay=w_delay;
 
         /* send packet */
         if( send(s->fd,buf,l,0) < 0 )
@@ -281,28 +293,28 @@
 #ifdef MAINTAINER_MODE
             printf("Send failed.\n");
 #endif
-	    if(errno == EBADF || errno == ENOTSOCK)
-	    {
+            if(errno == EBADF || errno == ENOTSOCK)
+            {
                 client_set_key((FSP_LOCK *)s->lock,p->key);
-		errno = EBADF;
-		return -1;
-	    }
+                errno = EBADF;
+                return -1;
+            }
             /* io terror */
             sleep(1);
             /* avoid wasting retry slot */
             retry--;
-	    t_delay += 1000;
+            t_delay += 1000;
             continue; 
         }
 
         /* keep delay value within sane limits */
-	if (w_delay > (int) s->maxdelay) 
-	    w_delay=s->maxdelay;
-	else
-	    if(w_delay < 1000 ) 
-		w_delay = 1000;
+        if (w_delay > (int) s->maxdelay) 
+            w_delay=s->maxdelay;
+        else
+            if(w_delay < 1000 ) 
+                w_delay = 1000;
 
-	t_delay += w_delay;
+        t_delay += w_delay;
         /* receive loop */
         while(1)
         {
@@ -330,11 +342,11 @@
                     }
             r=recv(s->fd,buf,FSP_MAXPACKET,0);
             if(r < 0 )
-	    {
+            {
                 /* serious recv error */
                 client_set_key((FSP_LOCK *)s->lock,p->key);
                 return -1;
-	    }
+            }
 
             gettimeofday(&stop,NULL);
             w_delay-=1000*(stop.tv_sec -  start[retry & 0x7].tv_sec);
@@ -358,6 +370,22 @@
                 continue;
             }
 
+            /* check command code */
+            if( (rpkt->cmd != p->cmd) && (rpkt->cmd != FSP_CC_ERR))
+            {
+                dupes++;
+                continue;
+            }
+
+            /* check correct filepos */
+            if( (rpkt->pos != p->pos) && ( p->cmd == FSP_CC_GET_DIR ||
+                p->cmd == FSP_CC_GET_FILE || p->cmd == FSP_CC_UP_LOAD ||
+                p->cmd == FSP_CC_GRAB_FILE || p->cmd == FSP_CC_INFO) )
+            {
+                dupes++;
+                continue;
+            }
+
             /* now we have a correct packet */
 
             /* compute rtt delay */
@@ -376,7 +404,7 @@
 
             /* grab a next key */
             client_set_key((FSP_LOCK *)s->lock,rpkt->key);
-	    errno = 0;
+            errno = 0;
             return 0;
         }
     }
@@ -400,7 +428,7 @@
     hints.ai_socktype = SOCK_DGRAM;
 
     if (port == 0)
-	strcpy(port_s,"fsp");
+        strcpy(port_s,"fsp");
     else
         sprintf(port_s,"%hu",port);
 
@@ -425,8 +453,8 @@
     s=calloc(1,sizeof(FSP_SESSION));
     if ( !s )
     {
-	close(fd);
-	errno = ENOMEM;
+        close(fd);
+        errno = ENOMEM;
         return NULL;
     }
 
@@ -434,10 +462,10 @@
 
     if ( !lock )
     {
-	close(fd);
-	free(s);
-	errno = ENOMEM;
-	return NULL;
+        close(fd);
+        free(s);
+        errno = ENOMEM;
+        return NULL;
     }
 
     s->lock=lock;
@@ -446,16 +474,16 @@
     addrin = (struct sockaddr_in *)res->ai_addr;
     if ( client_init_key( (FSP_LOCK *)s->lock,addrin->sin_addr.s_addr,ntohs(addrin->sin_port)))
     {
-	free(s);
-	close(fd);
-	free(lock);
-	return NULL;
+        free(s);
+        close(fd);
+        free(lock);
+        return NULL;
     }
 
     s->fd=fd;
     s->timeout=300000; /* 5 minutes */
     s->maxdelay=60000; /* 1 minute  */
-    s->seq=random();
+    s->seq=random() & 0xfff8;
     if ( password ) 
         s->password = strdup(password);
     return s;
@@ -469,7 +497,7 @@
     if( s == NULL)
         return;
     if ( s->fd == -1)
-	return;	
+        return; 
     /* Send bye packet */
     bye.cmd=FSP_CC_BYE;
     bye.len=bye.xlen=0;
@@ -502,7 +530,7 @@
 
     if(buildfilename(s,&out,dirname))
     {
-	return NULL;
+        return NULL;
     }
     pos=0;
     blocksize=0;
@@ -519,7 +547,7 @@
             pos = -1;
             break;
         }
-        if ( in.cmd != FSP_CC_GET_DIR )
+        if ( in.cmd == FSP_CC_ERR )
         {
             /* bad reply from the server */
             pos = -1;
@@ -549,11 +577,11 @@
             break;
         }
         dir->data=tmp;
-	memcpy(dir->data + pos, in.buf,in.len);
+        memcpy(dir->data + pos, in.buf,in.len);
         pos += in.len;
-	if (in.len < blocksize)
-	    /* last block is smaller */
-	    break;
+        if (in.len < blocksize)
+            /* last block is smaller */
+            break;
     }
     if (pos == -1)
     {
@@ -564,6 +592,7 @@
                 free(dir->data);
             free(dir);
         }
+        errno = EPERM;
         return NULL;
     }
 
@@ -571,7 +600,8 @@
     dir->blocksize=blocksize;
     dir->dirname=strdup(dirname);
     dir->datasize=pos;
-
+    
+    errno = 0;
     return dir;
 }
 
@@ -589,46 +619,52 @@
     rc=fsp_readdir_native(dir,&fentry,&fresult);
 
     if (rc != 0)
-	return rc;
+        return rc;
 
+#ifdef HAVE_DIRENT_TYPE
     /* convert FSP dirent to OS dirent */
 
     if (fentry.type == FSP_RDTYPE_DIR )
-	entry->d_type=DT_DIR;
+        entry->d_type=DT_DIR;
     else
-	entry->d_type=DT_REG;
-	
+        entry->d_type=DT_REG;
+#endif
+
     /* remove symlink destination */
     c=strchr(fentry.name,'\n');
     if (c)
     {
-	*c='\0';
-	rc=fentry.namlen-strlen(fentry.name);
-	fentry.reclen-=rc;
-	fentry.namlen-=rc;
+        *c='\0';
+        rc=fentry.namlen-strlen(fentry.name);
+        fentry.reclen-=rc;
+        fentry.namlen-=rc;
     }
 
+#ifdef HAVE_DIRENT_FILENO
     entry->d_fileno = 10;
+#endif    
+#ifdef HAVE_DIRENT_RECLEN
     entry->d_reclen = fentry.reclen;
+#endif
     strncpy(entry->d_name,fentry.name,MAXNAMLEN);
 
-    if (fentry.namlen > MAXNAMLEN)
+    if (fentry.namlen >= MAXNAMLEN)
     {
-	entry->d_name[MAXNAMLEN + 1 ] = '\0';
-#ifdef HAVE_NAMLEN
-	entry->d_namlen = MAXNAMLEN;
+        entry->d_name[MAXNAMLEN] = '\0';
+#ifdef HAVE_DIRENT_NAMLEN
+        entry->d_namlen = MAXNAMLEN;
     } else
     {
        entry->d_namlen = fentry.namlen;
-#endif       
+#endif
     }
 
     if (fresult == &fentry )
     {
-	*result = entry;
+        *result = entry;
     }
     else
-	*result = NULL;	
+        *result = NULL; 
 
     return 0; 
 }
@@ -653,7 +689,7 @@
             return 0;
        }
        if (dir->blocksize - (dir->dirpos % dir->blocksize) < 9)
-	   ftype= FSP_RDTYPE_SKIP;
+           ftype= FSP_RDTYPE_SKIP;
        else
            /* get the file type */
            ftype=dir->data[dir->dirpos+8];
@@ -668,7 +704,7 @@
            /* skip to next directory block */
            dir->dirpos = ( dir->dirpos / dir->blocksize + 1 ) * dir->blocksize;
 #ifdef MAINTAINER_MODE
-	   printf("new block dirpos: %d\n",dir->dirpos);
+           printf("new block dirpos: %d\n",dir->dirpos);
 #endif
            continue;
        }
@@ -680,9 +716,19 @@
        /* skip file date and file size */
        dir->dirpos += 9;
        /* read file name */
-       entry->name[255 + 1] = '\0';
-       strncpy(entry->name,(char *)( dir->data + dir->dirpos ),MAXNAMLEN);
-       namelen = strlen( (char *) dir->data+dir->dirpos);
+       entry->name[255] = '\0';
+       strncpy(entry->name,(char *)( dir->data + dir->dirpos ),255);
+       /* check for ASCIIZ encoded filename */
+       if (memchr(dir->data + dir->dirpos,0,dir->datasize - dir->dirpos) != NULL)
+       {
+            namelen = strlen( (char *) dir->data+dir->dirpos);
+       }
+       else
+       {
+            /* \0 terminator not found at end of filename */
+            *result = NULL;
+            return 0;
+       }
        /* skip over file name */
        dir->dirpos += namelen +1;
 
@@ -691,7 +737,7 @@
            entry->namlen = 255;
        else
            entry->namlen = namelen;
-       /* set record length */	   
+       /* set record length */     
        entry->reclen = 10+namelen;
 
        /* pad to 4 byte boundary */
@@ -709,12 +755,12 @@
 
 struct dirent * fsp_readdir(FSP_DIR *dirp)
 {
-    static struct dirent entry;
+    static dirent_workaround entry;
     struct dirent *result;
     
     
     if (dirp == NULL) return NULL;
-    if ( fsp_readdir_r(dirp,&entry,&result) )
+    if ( fsp_readdir_r(dirp,&entry.dirent,&result) )
         return NULL;
     else
         return result;
@@ -752,56 +798,56 @@
 
     if(session == NULL || path == NULL || modeflags == NULL)
     {
-	errno = EINVAL;
-	return NULL;
+        errno = EINVAL;
+        return NULL;
     }
 
     f=calloc(1,sizeof(FSP_FILE));
     if (f == NULL)
     {
-	return NULL;
+        return NULL;
     }
 
     /* check and parse flags */
     switch (*modeflags++)
     {
-	case 'r':
-		  break;
+        case 'r':
+                  break;
         case 'w':
-		  f->writing=1;
-		  break;
+                  f->writing=1;
+                  break;
         case 'a':
-	          /* not supported */
-		  free(f);
-		  errno = ENOTSUP;
-		  return NULL;
+                  /* not supported */
+                  free(f);
+                  errno = ENOTSUP;
+                  return NULL;
         default:
-		  free(f);
-		  errno = EINVAL;
-		  return NULL;
+                  free(f);
+                  errno = EINVAL;
+                  return NULL;
     }
 
     if (*modeflags == '+' || ( *modeflags=='b' && modeflags[1]=='+'))
     {
-	free(f);
-	errno = ENOTSUP;
-	return NULL;
+        free(f);
+        errno = ENOTSUP;
+        return NULL;
     }
 
     /* build request packet */
     if(f->writing)
     {
-	f->out.cmd=FSP_CC_UP_LOAD;
+        f->out.cmd=FSP_CC_UP_LOAD;
     }
     else
     {
         if(buildfilename(session,&f->out,path))
-	{
-	    free(f);
+        {
+            free(f);
             return NULL;
-	}
+        }
         f->bufpos=FSP_SPACE;
-	f->out.cmd=FSP_CC_GET_FILE;
+        f->out.cmd=FSP_CC_GET_FILE;
     }
     f->out.xlen=0;
 
@@ -810,9 +856,9 @@
     f->name=strdup(path);
     if(f->name == NULL)
     {
-	free(f);
-	errno = ENOMEM;
-	return NULL;
+        free(f);
+        errno = ENOMEM;
+        return NULL;
     }
 
     return f;
@@ -831,54 +877,54 @@
 
     while(1)
     {
-	/* need more data? */
-	if(file->bufpos>=FSP_SPACE)
-	{
-	    /* fill the buffer */
-	    file->out.pos=file->pos;
-	    if(fsp_transaction(file->s,&file->out,&file->in))
-	    {
-	         file->err=1;
-		 return done/size;
-	    }
-	    if(file->in.cmd != FSP_CC_GET_FILE)
-	    {
-		errno = EIO;
-		file->err=1;
-		return done/size;
-	    }
-	    file->bufpos=FSP_SPACE-file->in.len;
-	    if(file->bufpos > 0)
-	    {
-	       memmove(file->in.buf+file->bufpos,file->in.buf,file->in.len);
-	    }
-	    file->pos+=file->in.len;
-	}
-	havebytes=FSP_SPACE - file->bufpos;
-	if (havebytes == 0 )
-	{
-	    /* end of file! */
-	    file->eof=1;
-	    errno = 0;
-	    return done/size;
-	}
-	/* copy ready data to output buffer */
-	if(havebytes <= total )
-	{
-	    /* copy all we have */
-	    memcpy(ptr,file->in.buf+file->bufpos,havebytes);
-	    ptr+=havebytes;
-	    file->bufpos=FSP_SPACE;
-	    done+=havebytes;
-	    total-=havebytes;
-	} else
-	{
-	    /* copy bytes left */
-	    memcpy(ptr,file->in.buf+file->bufpos,total);
-	    file->bufpos+=total;
-	    errno = 0;
-	    return count;
-	}
+        /* need more data? */
+        if(file->bufpos>=FSP_SPACE)
+        {
+            /* fill the buffer */
+            file->out.pos=file->pos;
+            if(fsp_transaction(file->s,&file->out,&file->in))
+            {
+                 file->err=1;
+                 return done/size;
+            }
+            if(file->in.cmd == FSP_CC_ERR)
+            {
+                errno = EIO;
+                file->err=1;
+                return done/size;
+            }
+            file->bufpos=FSP_SPACE-file->in.len;
+            if(file->bufpos > 0)
+            {
+               memmove(file->in.buf+file->bufpos,file->in.buf,file->in.len);
+            }
+            file->pos+=file->in.len;
+        }
+        havebytes=FSP_SPACE - file->bufpos;
+        if (havebytes == 0 )
+        {
+            /* end of file! */
+            file->eof=1;
+            errno = 0;
+            return done/size;
+        }
+        /* copy ready data to output buffer */
+        if(havebytes <= total )
+        {
+            /* copy all we have */
+            memcpy(ptr,file->in.buf+file->bufpos,havebytes);
+            ptr+=havebytes;
+            file->bufpos=FSP_SPACE;
+            done+=havebytes;
+            total-=havebytes;
+        } else
+        {
+            /* copy bytes left */
+            memcpy(ptr,file->in.buf+file->bufpos,total);
+            file->bufpos+=total;
+            errno = 0;
+            return count;
+        }
     }
 }
 
@@ -888,7 +934,7 @@
     const char *ptr;
 
     if(file->eof || file->err)
-	return 0;
+        return 0;
 
     file->out.len=FSP_SPACE;
     total=count*size;
@@ -897,43 +943,43 @@
 
     while(1)
     {
-	/* need to write some data? */
-	if(file->bufpos>=FSP_SPACE)
-	{
-	    /* fill the buffer */
-	    file->out.pos=file->pos;
-	    if(fsp_transaction(file->s,&file->out,&file->in))
-	    {
-	         file->err=1;
-		 return done/size;
-	    }
-	    if(file->in.cmd != FSP_CC_UP_LOAD)
-	    {
-		errno = EIO;
-		file->err=1;
-		return done/size;
-	    }
-	    file->bufpos=0;
-	    file->pos+=file->out.len;
-	    done+=file->out.len;
-	}
-	freebytes=FSP_SPACE - file->bufpos;
-	/* copy input data to output buffer */
-	if(freebytes <= total )
-	{
-	    /* copy all we have */
-	    memcpy(file->out.buf+file->bufpos,ptr,freebytes);
-	    ptr+=freebytes;
-	    file->bufpos=FSP_SPACE;
-	    total-=freebytes;
-	} else
-	{
-	    /* copy bytes left */
-	    memcpy(file->out.buf+file->bufpos,ptr,total);
-	    file->bufpos+=total;
-	    errno = 0;
-	    return count;
-	}
+        /* need to write some data? */
+        if(file->bufpos>=FSP_SPACE)
+        {
+            /* fill the buffer */
+            file->out.pos=file->pos;
+            if(fsp_transaction(file->s,&file->out,&file->in))
+            {
+                 file->err=1;
+                 return done/size;
+            }
+            if(file->in.cmd == FSP_CC_ERR)
+            {
+                errno = EIO;
+                file->err=1;
+                return done/size;
+            }
+            file->bufpos=0;
+            file->pos+=file->out.len;
+            done+=file->out.len;
+        }
+        freebytes=FSP_SPACE - file->bufpos;
+        /* copy input data to output buffer */
+        if(freebytes <= total )
+        {
+            /* copy all we have */
+            memcpy(file->out.buf+file->bufpos,ptr,freebytes);
+            ptr+=freebytes;
+            file->bufpos=FSP_SPACE;
+            total-=freebytes;
+        } else
+        {
+            /* copy bytes left */
+            memcpy(file->out.buf+file->bufpos,ptr,total);
+            file->bufpos+=total;
+            errno = 0;
+            return count;
+        }
     }
 }
 
@@ -941,11 +987,11 @@
 {
     if(file->writing)
     {
-	file->bufpos=0;
+        file->bufpos=0;
     }
     else
     {
-	file->bufpos=FSP_SPACE;
+        file->bufpos=FSP_SPACE;
     }
     errno = 0;
     return 0;
@@ -955,32 +1001,32 @@
 {
     if(file == NULL)
     {
-	errno = ENOTSUP;
-	return -1;
+        errno = ENOTSUP;
+        return -1;
     }
     if(!file->writing)
     {
-	errno = EBADF;
-	return -1;
+        errno = EBADF;
+        return -1;
     }
     if(file->eof || file->bufpos==0)
     {
-	errno = 0;
-	return 0;
+        errno = 0;
+        return 0;
     }
 
     file->out.pos=file->pos;
     file->out.len=file->bufpos;
     if(fsp_transaction(file->s,&file->out,&file->in))
     {
-	 file->err=1;
-	 return -1;
+         file->err=1;
+         return -1;
     }
-    if(file->in.cmd != FSP_CC_UP_LOAD)
+    if(file->in.cmd == FSP_CC_ERR)
     {
-	errno = EIO;
-	file->err=1;
-	return -1;
+        errno = EIO;
+        file->err=1;
+        return -1;
     }
     file->bufpos=0;
     file->pos+=file->out.len;
@@ -1000,13 +1046,13 @@
     if(file->writing)
     {
         if(fsp_fflush(file))
-	{  
-	    rc=-1;
-	}
-	else if(fsp_install(file->s,file->name,0))
-	{
-	    rc=-1;
-	}
+        {  
+            rc=-1;
+        }
+        else if(fsp_install(file->s,file->name,0))
+        {
+            rc=-1;
+        }
     }
     free(file->name);
     free(file);
@@ -1019,25 +1065,25 @@
 
     switch(whence)
     {
-	case SEEK_SET:
-	              newoffset = offset;
-		      break;
+        case SEEK_SET:
+                      newoffset = offset;
+                      break;
         case SEEK_CUR:
-		      newoffset = stream->pos + offset;
-		      break;
+                      newoffset = stream->pos + offset;
+                      break;
         case SEEK_END:
-	              errno = ENOTSUP;
-		      return -1;
-	default:
-		      errno = EINVAL;
-		      return -1;
+                      errno = ENOTSUP;
+                      return -1;
+        default:
+                      errno = EINVAL;
+                      return -1;
     }
     if(stream->writing)
     {
-	if(fsp_fflush(stream))
-	{
-	    return -1;
-	}
+        if(fsp_fflush(stream))
+        {
+            return -1;
+        }
     }
     stream->pos=newoffset;
     stream->eof=0;
@@ -1053,7 +1099,7 @@
 void fsp_rewind(FSP_FILE *f)
 {
     if(f->writing)
-	fsp_fflush(f);
+        fsp_fflush(f);
     f->pos=0;
     f->err=0;
     f->eof=0;
@@ -1116,28 +1162,28 @@
     out.pos=0;
     rc=0;
     if( buildfilename(s,&out,fname) )
-	rc=-1;
+        rc=-1;
     else
-	{
-	    if (timestamp != 0)
-	    {
-		/* add timestamp extra data */
-		*(uint32_t *)(out.buf+out.len)=htonl(timestamp);
-		out.xlen=4;
-		out.pos=4;
-	    }
-	    if(fsp_transaction(s,&out,&in))
-	    {
-		rc=-1;
-	    } else
-	    {
-		if(in.cmd != FSP_CC_INSTALL)
-		{
-		    rc=-1;
-		    errno = EPERM;
-		}
-	    }
-	}
+        {
+            if (timestamp != 0)
+            {
+                /* add timestamp extra data */
+                *(uint32_t *)(out.buf+out.len)=htonl(timestamp);
+                out.xlen=4;
+                out.pos=4;
+            }
+            if(fsp_transaction(s,&out,&in))
+            {
+                rc=-1;
+            } else
+            {
+                if(in.cmd == FSP_CC_ERR)
+                {
+                    rc=-1;
+                    errno = EPERM;
+                }
+            }
+        }
 
     return rc;
 }
@@ -1155,7 +1201,12 @@
    if(fsp_transaction(s,&out,&in))
        return -1;
 
-   if(in.cmd != FSP_CC_GET_PRO || in.pos != FSP_PRO_BYTES)
+   if(in.cmd == FSP_CC_ERR)
+   {
+       errno = ENOENT;
+       return -1;
+   }
+   if(in.pos != FSP_PRO_BYTES)
    {
        errno = ENOMSG;
        return -1;
@@ -1181,7 +1232,7 @@
    if(fsp_transaction(s,&out,&in))
        return -1;
 
-   if(in.cmd != FSP_CC_STAT)
+   if(in.cmd == FSP_CC_ERR)
    {
        errno = ENOTSUP;
        return -1;
@@ -1249,8 +1300,8 @@
        l=strlen(s->password)+1;
        if(out.len + out.xlen + l > FSP_SPACE)
        {
-	   errno = ENAMETOOLONG;
-	   return -1;
+           errno = ENAMETOOLONG;
+           return -1;
        }
        out.buf[out.len+out.xlen-1] = '\n';
        memcpy(out.buf+out.len+out.xlen,s->password,l);
@@ -1263,7 +1314,7 @@
    if(fsp_transaction(s,&out,&in))
        return -1;
 
-   if(in.cmd != FSP_CC_RENAME)
+   if(in.cmd == FSP_CC_ERR)
    {
        errno = EPERM;
        return -1;
@@ -1283,90 +1334,90 @@
     rc=fsp_stat(s,path,&sb);
     if(rc == -1)
     {
-	/* not found */
-	/* errno is set by fsp_stat */
-	return -1;
+        /* not found */
+        /* errno is set by fsp_stat */
+        return -1;
     }
 
     /* just test file existence */
     if(mode == F_OK)
     {
-	errno = 0;
-	return  0;
+        errno = 0;
+        return  0;
     }
 
     /* deny execute access to file */
     if (mode & X_OK)
     {
-	if(S_ISREG(sb.st_mode))
-	{
-	    errno = EACCES;
-	    return -1;
-	}
+        if(S_ISREG(sb.st_mode))
+        {
+            errno = EACCES;
+            return -1;
+        }
     }
     
     /* Need to get ACL of directory */
     if(S_ISDIR(sb.st_mode))
-	dir=NULL;
+        dir=NULL;
     else
-	dir=directoryfromfilename(path);	
+        dir=directoryfromfilename(path);        
     
     rc=fsp_getpro(s,dir==NULL?path:dir,&dirpro);
     /* get pro failure */
     if(rc)
     {
-	if(dir) free(dir);
-	errno = EACCES;
-	return -1;
+        if(dir) free(dir);
+        errno = EACCES;
+        return -1;
     }
     /* owner shortcut */
     if(dirpro & FSP_DIR_OWNER)
     {
-	if(dir) free(dir);
-	errno = 0;
-	return 0;
+        if(dir) free(dir);
+        errno = 0;
+        return 0;
     }
     /* check read access */
     if(mode & R_OK)
     {
-	if(dir)
-	{
-	    if(! (dirpro & FSP_DIR_GET))
-	    {
-		free(dir);
-		errno = EACCES;
-		return -1;
-	    }
-	} else
-	{
-	    if(! (dirpro & FSP_DIR_LIST))
-	    {
-		errno = EACCES;
-		return -1;
-	    }
-	}
+        if(dir)
+        {
+            if(! (dirpro & FSP_DIR_GET))
+            {
+                free(dir);
+                errno = EACCES;
+                return -1;
+            }
+        } else
+        {
+            if(! (dirpro & FSP_DIR_LIST))
+            {
+                errno = EACCES;
+                return -1;
+            }
+        }
     }
     /* check write access */
     if(mode & W_OK)
     {
-	if(dir)
-	{
-	    if( !(dirpro & FSP_DIR_DEL) || !(dirpro & FSP_DIR_ADD))
-	    {
-		free(dir);
-		errno = EACCES;
-		return -1;
-	    }
-	} else
-	{
-	    /* when checking directory for write access we are cheating
-	       by allowing ADD or DEL right */
-	    if( !(dirpro & FSP_DIR_DEL) && !(dirpro & FSP_DIR_ADD))
-	    {
-		errno = EACCES;
-		return -1;
-	    }
-	}
+        if(dir)
+        {
+            if( !(dirpro & FSP_DIR_DEL) || !(dirpro & FSP_DIR_ADD))
+            {
+                free(dir);
+                errno = EACCES;
+                return -1;
+            }
+        } else
+        {
+            /* when checking directory for write access we are cheating
+               by allowing ADD or DEL right */
+            if( !(dirpro & FSP_DIR_DEL) && !(dirpro & FSP_DIR_ADD))
+            {
+                errno = EACCES;
+                return -1;
+            }
+        }
     }
 
     if(dir) free(dir);
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/lib/fsplib/fsplib.h src/gftp-2.0.18/lib/fsplib/fsplib.h
--- origsrc/gftp-2.0.18/lib/fsplib/fsplib.h	2005-01-18 20:04:02.000000000 -0600
+++ src/gftp-2.0.18/lib/fsplib/fsplib.h	2007-11-11 23:00:36.765625000 -0600
@@ -1,13 +1,17 @@
 #ifndef _FSPLIB_H
 #define _FSPLIB_H 1
 #include <time.h>
+#include <dirent.h>
+#include <sys/stat.h>
+#include <stddef.h>
+
 /* The FSP v2 protocol support library - public interface */
 
 /*
 This file is part of fsplib - FSP protocol stack implemented in C
 language. See http://fsp.sourceforge.net for more information.
 
-Copyright (c) 2003-2005 by Radim HSN Kolar (hsn@netmag.cz)
+Copyright (c) 2003-2005 by Radim HSN Kolar (hsn@sendmail.cz)
 
 You may copy or modify this file in any manner you wish, provided
 that this notice is always included, and that you hold the author
@@ -138,6 +142,12 @@
 		      unsigned int pos;          /* position of next packet */
 } FSP_FILE;
 
+
+typedef union dirent_workaround {
+      struct dirent dirent;
+      char fill[offsetof (struct dirent, d_name) + MAXNAMLEN + 1];
+} dirent_workaround;
+ 
 /* function prototypes */
 
 /* session management */
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/lib/fsplib/lock.c src/gftp-2.0.18/lib/fsplib/lock.c
--- origsrc/gftp-2.0.18/lib/fsplib/lock.c	2005-01-02 09:45:51.000000000 -0600
+++ src/gftp-2.0.18/lib/fsplib/lock.c	2007-11-11 23:44:14.265625000 -0600
@@ -1,3 +1,7 @@
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
 #include <string.h>
 #include <stdio.h>
 #include "lock.h"
@@ -91,7 +95,7 @@
   mode_t omask;
   key_t lock_key;
   int fd;
-  union semun sun;
+  union semun su;
   struct sembuf sem;
 
   make_key_string(lock,server_addr,server_port);
@@ -123,8 +127,8 @@
 	  return -1;
       }
       /* we need to init this semaphore */
-      sun.val=1;
-      if(semctl(lock->lock_sem,0,SETVAL,sun) == -1)
+      su.val=1;
+      if(semctl(lock->lock_sem,0,SETVAL,su) == -1)
       {
 	  perror("semctl setval");
 	  return -1;
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/gftp-2.0.18/lib/pty.c src/gftp-2.0.18/lib/pty.c
--- origsrc/gftp-2.0.18/lib/pty.c	2005-01-04 07:32:11.000000000 -0600
+++ src/gftp-2.0.18/lib/pty.c	2007-11-11 22:11:31.015625000 -0600
@@ -61,7 +61,7 @@
 
 #elif HAVE_GRANTPT
 
-#ifndef __FreeBSD__
+#ifdef HAVE_STROPTS_H
 #include <stropts.h>
 #endif
 
